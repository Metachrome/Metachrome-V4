// Test Universal Notification System
console.log('üéØ TESTING UNIVERSAL NOTIFICATION SYSTEM');
console.log('=======================================');

// Test the universal notification by triggering a manual trade completion
async function testUniversalNotification() {
  try {
    console.log('üß™ Testing universal notification system...');
    
    // Get user data
    const userData = localStorage.getItem('user');
    const user = JSON.parse(userData);
    const authToken = localStorage.getItem('authToken');
    
    console.log('üë§ User ID:', user.id);
    
    // Test with manual trade completion
    console.log('üì° Sending manual trade completion...');
    
    const response = await fetch('/api/trades/complete', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${authToken}`
      },
      body: JSON.stringify({
        tradeId: 'universal-test-' + Date.now(),
        userId: user.id,
        won: true,
        amount: 100,
        payout: 110
      })
    });
    
    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ Manual trade completion sent:', result);
      console.log('üëÄ Watch for universal notification to appear!');
      console.log('üì± Should work on both mobile and desktop');
      
      // Check after 3 seconds
      setTimeout(() => {
        console.log('üîç Checking if notification appeared...');
        console.log('üí° The notification should be visible on screen now');
        console.log('üí° It should be responsive - centered on mobile, top-right on desktop');
      }, 3000);
      
    } else {
      const error = await response.text();
      console.log('‚ùå Manual completion failed:', response.status, error);
    }
    
  } catch (error) {
    console.log('‚ùå Test error:', error);
  }
}

// Test WebSocket notification
async function testWebSocketNotification() {
  try {
    console.log('\nüì° Testing WebSocket notification...');
    
    const userData = localStorage.getItem('user');
    const user = JSON.parse(userData);
    const authToken = localStorage.getItem('authToken');
    
    const response = await fetch('/api/test/websocket-notification', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${authToken}`
      },
      body: JSON.stringify({ userId: user.id })
    });
    
    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ WebSocket test sent:', result);
      console.log('üìä Clients connected:', result.clientCount);
      
      if (result.clientCount > 0) {
        console.log('‚úÖ WebSocket is working!');
        console.log('üëÄ Watch for notification to appear via WebSocket');
      } else {
        console.log('‚ö†Ô∏è No WebSocket clients connected');
      }
    } else {
      console.log('‚ùå WebSocket test failed:', response.status);
    }
    
  } catch (error) {
    console.log('‚ùå WebSocket test error:', error);
  }
}

// Check screen size and responsive behavior
function checkResponsiveBehavior() {
  console.log('\nüì± CHECKING RESPONSIVE BEHAVIOR:');
  console.log('Screen width:', window.innerWidth);
  console.log('Screen height:', window.innerHeight);
  
  if (window.innerWidth < 768) {
    console.log('üì± Mobile view detected');
    console.log('üí° Notification should appear centered on screen');
  } else {
    console.log('üñ•Ô∏è Desktop view detected');
    console.log('üí° Notification should appear in top-right corner');
  }
  
  console.log('\nüé® EXPECTED BEHAVIOR:');
  console.log('‚Ä¢ Mobile (< 768px): Centered, larger text, more padding');
  console.log('‚Ä¢ Desktop (‚â• 768px): Top-right corner, compact size');
  console.log('‚Ä¢ Both: Same styling, same functionality, automatic close after 25s');
}

// Run all tests
console.log('üöÄ Running universal notification tests...');

checkResponsiveBehavior();
testUniversalNotification();

setTimeout(() => {
  testWebSocketNotification();
}, 2000);

console.log('\nüìã WHAT TO EXPECT:');
console.log('1. ‚úÖ Universal notification should appear for manual completion');
console.log('2. ‚úÖ Notification should be responsive (mobile vs desktop positioning)');
console.log('3. ‚úÖ WebSocket notification should also work');
console.log('4. ‚úÖ Same notification system for all devices');
console.log('\nüí° BENEFITS OF UNIVERSAL SYSTEM:');
console.log('‚Ä¢ No complex mobile detection logic');
console.log('‚Ä¢ Single codebase for all devices');
console.log('‚Ä¢ Consistent behavior and styling');
console.log('‚Ä¢ Easier to maintain and debug');
console.log('‚Ä¢ Uses proven desktop notification that already works');

// Make test function available globally
window.testUniversalNotification = testUniversalNotification;
